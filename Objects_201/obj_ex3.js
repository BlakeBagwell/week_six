// function Person(name) {
//   this.name = name;
//   this.friends = [];
// }
//
// Person.prototype.addFriend = function(friend) {
//   this.friends.push(friend);
// };
//
// Person.prototype.createGreeting = function(other) {
//   return 'Yo ' + other.name + '! from ' + this.name + '.';
// };
//
// Person.prototype.greet = function(other) {
//   console.log(this.createGreeting(other));
// };

//Given this Person type, Rewrite the above type by inlining it's greet method into it's constructor.

function Person(name) {
  this.name = name;
  this.friends = [];
  this.greet = function(other) {
    console.log(this.createGreeting(other));
  };
}

Person.prototype.addFriend = function(friend) {
  this.friends.push(friend);
};

Person.prototype.createGreeting = function(other) {
  return 'Yo ' + other.name + '! from ' + this.name + '.';
};

Person.prototype.createGreetingsForFriends = function() {
  var that = this;
  var allGreetings = this.friends.map(function(friend) {
    var greeting = that.createGreeting(friend);
    return greeting;
  });
  console.log(allGreetings);
};

// when we create the people below, we have to pass in the arguments required by the constructor, in this case the name.
mark = new Person('Mark');
jake = new Person('Jake');
//now we call the method and pass in an object, another person.
mark.greet(jake);


//Take the previous Person type and rewrite it in factory function form.

// function createPerson(name) {
//   var person = {
//     name: name
//   };
//
//   person.greet = function(other) {
//     console.log('Hello' + other.name + '! My name is ' + this.name + '.' );
//   };
//
//   person.lazyGreet = function(other) {
//     setTimeout(() => {
//       console.log('Hello, I am ' + this.name + '.');
//     }, 2000);
//   };
//
//   return person;
// }


// Add to Person a createGreetingsForFriends method which will return an array of strings - each string in the array is a greeting generated by the createGreeting method. For example:

var alfie = new Person('Alfie');
var anushka = new Person('Anushka');
var henrique = new Person('Henrique');
alfie.addFriend(anushka);
alfie.addFriend(henrique);
alfie.createGreetingsForFriends();

// Do this without using a loop but by using map instead.
